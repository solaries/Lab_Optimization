
@{
    List<Lo.Models.Lo_Patient_data> data0  =  ( List<Lo.Models.Lo_Patient_data>)@ViewBag.data0;
} 

@{
    List<Lo.Models.Lo_Test_Type_data> data1 = (List<Lo.Models.Lo_Test_Type_data>)@ViewBag.data1;
}
 
 @{
 
}  

<div class="card">
    <div class="card-body">
        <h4 class="card-title">New Patient Tests</h4>
        <div class="form-validation">
            <form id ="widgetu1290"class="form-valide" action="#"  method="post" enctype="multipart/form-data"> 
                @Html.AntiForgeryToken()  
                <div class="form-group row">
                <label class="col-lg-4 col-form-label">Patient</label>
                <div class="col-lg-6">
                            <select class="form-control" id="Patient" name="Patient">
                            <option value="">Select Patient</option>
                            @foreach (Lo.Models.Lo_Patient_data item in data0)
                            {
                               <option value="@item.Id"> @item.First_name</option>
                            }
                            </select>                     </div>
              </div>


                <div class="table-responsive">
                    <table class="table table-striped table-bordered zero-configuration">
                        <thead>
                            <tr>
                                <th>   </th>
                                <th>Test Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in data1)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" onclick="setRight(@item.Id2)" />
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Test_name)</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th>   </th>
                                <th>Test Type</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <input id="Test_date" name="Test_date" value="." type="hidden" />
                <input id="selectedTests" name="selectedTests" value="" type="hidden" />


                @*<div class="form-group row">
                <label class="col-lg-4 col-form-label">Test date</label>
                <div class="col-lg-6">
                     <input id="Test_date" name="Test_date" required   type="datetime" class="form-control" maxlength="1"
                     placeholder="Test Date" />
                     </div>
              </div>*@

                <div class="form-group row">
                    <div class="col-lg-8 ml-auto">
                        <button type="button" class="btn btn-primary" onclick="checkAndGo()">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script> 
    var selectedRights = ""; 
    function setRight(id) { 
        selectedRights = document.getElementById("selectedTests").value;  
        if (selectedRights.indexOf("sphinxcol" + id + "sphinxcol") > -1) { 
            selectedRights = selectedRights.split("sphinxcol" + id + "sphinxcol").join(""); 
        } 
        else { 
            selectedRights += "sphinxcol" + id + "sphinxcol"; 
        } 
        document.getElementById("selectedTests").value = selectedRights;
    } 
    function doClean(text) { 
        text.value = text.value.split("'").join("");
        text.value = text.value.split(">").join("");
        text.value = text.value.split("<").join("");
        text.value = text.value.split("~").join("");
        text.value = text.value.split("&").join("");
        text.value = text.value.split("\\").join("");
        text.value = text.value.split("_").join("");
        text.value = text.value.split("%").join("");
        text.value = text.value.split("\"").join("");
    } 
    function doCleanN(text) {
        var list = "0123456789";
        var data = text.value;
        for (i = 0; i < data.length; i++) {
            if (list.indexOf(data.substring(i, i + 1)) == -1) {
                data = data.split(data.substring(i, i + 1)).join(""); 
            }
        }
        text.value = data;
    } 
        function msg(txt) {
            sweetAlert("...", txt, "info");
        }
        function doCleanNumber(textBox) {
            var strVal;
            var strVal1;
            var strVal2;
            var dot;
            var i;
            var strComma;
            strVal2 = "";
            strComma = "";
            strVal1 = "";
            if (isNaN(textBox.value.split(",").join(""))) {
                textBox.value = parseFloat(textBox.value.split(",").join(""));
            }
            strVal = textBox.value;
            dot = 0;
            for (i = 0; i < strVal.length; i++) {
                if (strVal.substring(i, i + 1).indexOf('.') > -1) {
                    dot = dot + 1;
                }
                if ((strVal.substring(i, i + 1).indexOf('0') > -1) || (strVal.substring(i, i + 1).indexOf("1") > -1) || (strVal.substring(i, i + 1).indexOf("2") > -1) || (strVal.substring(i, i + 1).indexOf("3") > -1) || (strVal.substring(i, i + 1).indexOf("4") > -1) || (strVal.substring(i, i + 1).indexOf("5") > -1) || (strVal.substring(i, i + 1).indexOf("6") > -1) || (strVal.substring(i, i + 1).indexOf("7") > -1) || (strVal.substring(i, i + 1).indexOf("8") > -1) || (strVal.substring(i, i + 1).indexOf("9") > -1) || ((strVal.substring(i, i + 1).indexOf('.') > -1) && dot <= 1)) {
                    strVal1 = strVal1 + strVal.substring(i, i + 1)
                }
            }
            if ((strVal1.indexOf('.') == 0)) {
                strVal1 = "0" + strVal1;
            }
            if (strVal1.indexOf('.') > 0) {
                if (((strVal1.length) - (strVal1.indexOf('.') + 1)) > 2) {
                    strVal1 = strVal1.substring(0, strVal1.indexOf('.') + 3);
                }
            } 
            strVal = "";
            if (strVal1.indexOf('.') != -1) {
                strVal = strVal1.substring(strVal1.indexOf('.'), strVal1.indexOf('.') + 3);
                strVal1 = strVal1.substring(0, strVal1.indexOf('.'));
            } 
            while (strVal1.length > 0) {
                if (strVal1.length > 3) {
                    strVal2 = strVal1.substring(strVal1.length - 3, strVal1.length) + strComma + strVal2;
                    strVal1 = strVal1.substring(0, strVal1.length - 3);
                    strComma = ",";
                }
                else {
                    strVal2 = strVal1 + strComma + strVal2;
                    strVal1 = "";
                }
            } 
            if (strVal2.indexOf('.') > 0) {
                strVal2 = strVal2.substring(0, strVal2.indexOf('.')); 
            } 
            textBox.value = strVal2 + strVal;
        } 
    function checkAndGo() { 
                 if (document.getElementById("Patient").value.trim().length == 0) {
             msg("Please select patient");
             return;
         } 
         if (document.getElementById("Test_date").value.trim().length == 0) {
             msg("Please enter Test Date");
             return;
         } 

        document.getElementById("widgetu1290").submit(); 
    } 
</script> 
<script> 
    var statusMessage = "@ViewBag.status" || false; 
    if (statusMessage != false && statusMessage.length > 0) {
        msg(statusMessage); 
    }
</script> 
